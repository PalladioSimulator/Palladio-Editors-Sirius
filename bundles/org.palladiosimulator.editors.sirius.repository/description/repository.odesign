<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" name="repository" version="12.0.0.2017041100">
  <ownedViewpoints name="Repository" modelFileExtension="repository">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Repository Diagram" initialisation="true" pasteDescriptions="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Repository%20Component%20Copy%20Paste'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Interface%20Copy%20Paste']" domainClass="repository.Repository" enablePopupBars="true">
      <metamodel href="http://palladiosimulator.org/PalladioComponentModel/5.2#//repository"/>
      <metamodel href="http://palladiosimulator.org/PalladioComponentModel/5.2#//parameter"/>
      <metamodel href="http://palladiosimulator.org/PalladioComponentModel/5.2#//seff"/>
      <metamodel href="http://palladiosimulator.org/PalladioComponentModel/5.2#//subsystem"/>
      <metamodel href="http://sdq.ipd.uka.de/StochasticExpressions/2.2#/"/>
      <metamodel href="http://palladiosimulator.org/PalladioComponentModel/5.2#//core"/>
      <metamodel href="http://palladiosimulator.org/PalladioComponentModel/5.2#//core/entity"/>
      <metamodel href="http://palladiosimulator.org/PalladioComponentModel/5.2#//resourcetype"/>
      <diagramInitialisation>
        <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Load Resources" id="LoadResources">
          <parameters name="PrimitiveTypes.repository" value="aql:'pathmap://PCM_MODELS/PrimitiveTypes.repository'"/>
          <parameters name="Palladio.resourcetype" value="aql:'pathmap://PCM_MODELS/Palladio.resourcetype'"/>
          <parameters name="FailureTypes.repository" value="aql:'pathmap://PCM_MODELS/FailureTypes.repository'"/>
        </firstModelOperations>
      </diagramInitialisation>
      <defaultLayer name="Default">
        <edgeMappings name="RequiredRole" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" sourceMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='CompositeComponent'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='SubSystem'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='ProvidesComponentType'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='CompleteComponentType']" targetMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='Interface']" targetFinderExpression="feature:requiredInterface__OperationRequiredRole" sourceFinderExpression="feature:requiringEntity_RequiredRole" domainClass="repository.OperationRequiredRole" useDomainElement="true" reconnections="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='OperationRequiredRole%27s%20Target'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='RequiredRole%27s%20Source']">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql: '&lt;&lt;Requires>>\n' + self.entityName">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ProvidedRole" sourceMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='CompositeComponent'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='SubSystem'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='ProvidesComponentType'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='CompleteComponentType']" targetMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='Interface']" targetFinderExpression="feature:providedInterface__OperationProvidedRole" sourceFinderExpression="feature:providingEntity_ProvidedRole" domainClass="repository.OperationProvidedRole" useDomainElement="true" reconnections="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='OperationProvidedRole%27s%20Target'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='OperationProvidedRole%27s%20Source']">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql: '&lt;&lt;Provides>>\n' + self.entityName">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="InfrastructureRequiredRole" sourceMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='CompositeComponent'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='SubSystem'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='ProvidesComponentType'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='CompleteComponentType']" targetMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='InfrastructureInterface']" targetFinderExpression="feature:requiredInterface__InfrastructureRequiredRole" sourceFinderExpression="feature:requiringEntity_RequiredRole" domainClass="repository.InfrastructureRequiredRole" useDomainElement="true" reconnections="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='RequiredRole%27s%20Source'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='InfrastructureRequiredRole%27s%20Target']">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql: '&lt;&lt;Requires>>\n' + self.entityName">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="InfrastructureProvidedRole" sourceMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='CompositeComponent'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='SubSystem'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='ProvidesComponentType'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='CompleteComponentType']" targetMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='InfrastructureInterface']" targetFinderExpression="feature:providedInterface__InfrastructureProvidedRole" sourceFinderExpression="feature:providingEntity_ProvidedRole" domainClass="repository.InfrastructureProvidedRole" useDomainElement="true" reconnections="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='InfrastructureProvidedRole%27s%20Target'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='InfrastructureProvidedRole%27s%20Source']">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql: '&lt;&lt;Provides>>\n' + self.entityName">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="Interface" deletionDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='OperationInterface%20Deletion']" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="feature:interfaces__Repository" domainClass="repository.OperationInterface" childrenPresentation="List">
          <subNodeMappings name="OperationSignature" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Signature']" semanticCandidatesExpression="feature:signatures__OperationInterface" domainClass="repository.OperationSignature">
            <conditionnalStyles predicateExpression="[self.returnType__OperationSignature.oclIsUndefined()/]">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:'void ' + self.entityName + '(' + self.printParameters() + ')'" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="[self.returnType__OperationSignature.oclIsTypeOf(PrimitiveDataType)/]">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.returnType__OperationSignature.oclAsType(repository::PrimitiveDataType).type.toString().toLower() + ' ' + self.entityName + '('+ self.printParameters() +')'" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="[self.returnType__OperationSignature.oclIsTypeOf(CompositeDataType)/]">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.returnType__OperationSignature.oclAsType(repository::CompositeDataType).entityName + ' ' + self.entityName + '(' + self.printParameters() + ')'" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="[self.returnType__OperationSignature.oclIsTypeOf(CollectionDataType)/]">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:if self.returnType__OperationSignature.oclIsTypeOf(repository::CollectionDataType) and self.returnType__OperationSignature.oclAsType(repository::CollectionDataType).innerType_CollectionDataType.oclIsTypeOf(repository::PrimitiveDataType) then &#xD;self.returnType__OperationSignature.oclAsType(repository::CollectionDataType).innerType_CollectionDataType.oclAsType(repository::PrimitiveDataType).type.toString().toLower() + '[]' else self.returnType__OperationSignature.oclAsType(repository::CollectionDataType).entityName endif  + ' ' + self.entityName + '(' + self.printParameters() + ')'" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="aql: '&lt;&lt;Interface>>\n'.concat(self.entityName)" widthComputationExpression="20" heightComputationExpression="10">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="InfrastructureInterface" deletionDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='InfrastructureInterface%20Deletion']" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="feature:interfaces__Repository" domainClass="repository.InfrastructureInterface" childrenPresentation="List">
          <subNodeMappings name="InfrastructureSignature" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Signature']" semanticCandidatesExpression="feature:infrastructureSignatures__InfrastructureInterface" domainClass="repository.InfrastructureSignature">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.entityName + '(' + self.printParameters() + ')'" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="aql: '&lt;&lt;InfrastructureInterface>>\n'.concat(self.entityName)" widthComputationExpression="20" heightComputationExpression="10">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="BasicComponent" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="feature:components__Repository" domainClass="repository.BasicComponent" childrenPresentation="VerticalStack">
          <subContainerMappings name="SEFFCompartment" pasteDescriptions="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='SEFF%20Copy%20Paste']" semanticCandidatesExpression="var:self" domainClass="repository.BasicComponent" childrenPresentation="List">
            <subNodeMappings name="SEFF" semanticCandidatesExpression="feature:serviceEffectSpecifications__BasicComponent" doubleClickDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='SEFF%20Representation']" domainClass="seff.ResourceDemandingSEFF">
              <style xsi:type="style:SquareDescription" labelExpression="[self.describedService__SEFF.eContainer().oclAsType(Interface).entityName +  '.' + self.describedService__SEFF.entityName/]" sizeComputationExpression="" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
              <conditionnalStyles predicateExpression="aql:self.describedService__SEFF=null">
                <style xsi:type="style:SquareDescription" labelExpression="unspecified described service" labelPosition="node" resizeKind="NSEW">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="SEFFCompartment" widthComputationExpression="" heightComputationExpression="">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="PassiveResourcesCompartment" semanticCandidatesExpression="var:self" domainClass="repository.BasicComponent" childrenPresentation="List">
            <subNodeMappings name="PassiveResource" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="feature:passiveResource_BasicComponent" doubleClickDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='Edit%20Capacity']" domainClass="repository.PassiveResource">
              <style xsi:type="style:SquareDescription" labelExpression="aql:self.entityName + '&lt;Capacity: ' + self.capacity_PassiveResource.specification + '>'" sizeComputationExpression="" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="PassiveResourcesCompartment" widthComputationExpression="" heightComputationExpression="">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="ComponentParameterCompartment" semanticCandidatesExpression="var:self" domainClass="repository.BasicComponent">
            <subContainerMappings name="ComponentParameter" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='Variable%20Usage']" semanticCandidatesExpression="feature:componentParameterUsage_ImplementationComponentType" domainClass="parameter.VariableUsage" childrenPresentation="List">
              <subNodeMappings name="Variable Characterisation" semanticCandidatesExpression="feature:variableCharacterisation_VariableUsage" doubleClickDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='Edit%20VariableCharacterisation']" domainClass="parameter.VariableCharacterisation">
                <style xsi:type="style:SquareDescription" labelExpression="aql:self.type + ' = ' + self.specification_VariableCharacterisation.specification" sizeComputationExpression="" labelPosition="node" resizeKind="NSEW">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
                <conditionnalStyles predicateExpression="aql: (self.type + ' = ' + self.specification_VariableCharacterisation.specification).size() > 40">
                  <style xsi:type="style:SquareDescription" labelExpression="aql: (self.type + ' = ' + self.specification_VariableCharacterisation.specification).substring(1, 40) + ' ...'" labelPosition="node" resizeKind="NSEW">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                  </style>
                </conditionnalStyles>
              </subNodeMappings>
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="aql:self.namedReference__VariableUsage.referenceName" widthComputationExpression="" heightComputationExpression="">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subContainerMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="ComponentParameterCompartment" widthComputationExpression="" heightComputationExpression="">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="ResourceRequiredRolesCompartment" semanticCandidatesExpression="var:self" domainClass="repository.BasicComponent" childrenPresentation="List">
            <subNodeMappings name="ResourceRequiredRole" semanticCandidatesExpression="feature:resourceRequiredRoles__ResourceInterfaceRequiringEntity" doubleClickDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='Edit%20ResourceInterface']" domainClass="entity.ResourceRequiredRole">
              <style xsi:type="style:SquareDescription" labelExpression="aql:self.entityName + '&lt;' + self.requiredResourceInterface__ResourceRequiredRole.entityName + '>'" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="ResourceRequiredRoles">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="aql: '&lt;&lt;BasicComponent>>\n'.concat(self.entityName)" widthComputationExpression="" heightComputationExpression="">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="CompositeComponent" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="feature:components__Repository" doubleClickDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='CompositeComponent%20Representation']" domainClass="repository.CompositeComponent" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="aql: '&lt;&lt;CompositeComponent>>\n'.concat(self.entityName)" widthComputationExpression="20" heightComputationExpression="10">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="SubSystem" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="feature:components__Repository" doubleClickDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='SubSystem%20Representation']" domainClass="subsystem.SubSystem" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="aql: '&lt;&lt;SubSystem>>\n'.concat(self.entityName)" widthComputationExpression="10" heightComputationExpression="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Basic Model Elements">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Interface" containerMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='Interface']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository::OperationInterface" referenceName="interfaces__Repository">
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'Interface' + container.eContents()->filter(repository::OperationInterface)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="BasicComponent" containerMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository::BasicComponent" referenceName="components__Repository">
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'BasicComponent' + container.eAllContents()->filter(repository::BasicComponent)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="CompositeComponent" containerMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='CompositeComponent']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository::CompositeComponent" referenceName="components__Repository">
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'CompositeComponent' + container.eAllContents()->filter(repository::CompositeComponent)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="SubSystem" containerMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='SubSystem']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="subsystem::SubSystem" referenceName="components__Repository">
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'SubSystem' + container.eAllContents()->filter(subsystem::SubSystem)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="InfrastructureInterface" containerMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='InfrastructureInterface']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository::InfrastructureInterface" referenceName="interfaces__Repository">
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'InfrastructureInterface' + container.eAllContents()->filter(repository::InfrastructureInterface)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="Edit Signature" inputLabelExpression="feature:entityName">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:If" conditionExpression="service:self.isJavaIdentifier(0)">
                <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="var:0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="Edit Name" inputLabelExpression="feature:entityName">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="var:0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="RequiredRole" edgeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@edgeMappings[name='RequiredRole']" extraSourceMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='SEFFCompartment'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='PassiveResourcesCompartment'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='ComponentParameterCompartment'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='ResourceRequiredRolesCompartment']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.OperationRequiredRole" referenceName="requiredRoles_InterfaceRequiringEntity">
                  <subModelOperations xsi:type="tool:SetValue" featureName="requiredInterface__OperationRequiredRole" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:self.requiringEntity_RequiredRole.entityName + '.' + self.requiredInterface__OperationRequiredRole.entityName + '.OperationRequiredRole' + source.eContents()->filter(repository::OperationRequiredRole)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="ProvidedRole" precondition="[preSource.oclAsType(RepositoryComponent).providedRoles_InterfaceProvidingEntity->exists(x |  (x.oclIsTypeOf(OperationProvidedRole)) and (x.oclAsType(OperationProvidedRole).providedInterface__OperationProvidedRole = preTarget)) = false or preSource.oclIsTypeOf(CompositeComponent)/]" edgeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@edgeMappings[name='ProvidedRole']" extraSourceMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='ComponentParameterCompartment'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='PassiveResourcesCompartment'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='SEFFCompartment'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='ResourceRequiredRolesCompartment']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository::OperationProvidedRole" referenceName="providedRoles_InterfaceProvidingEntity">
                  <subModelOperations xsi:type="tool:SetValue" featureName="providedInterface__OperationProvidedRole" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:self.providingEntity_ProvidedRole.entityName + '.' + self.providedInterface__OperationProvidedRole.entityName + '.OperationProvidedRole' + source.eContents()->filter(repository::OperationProvidedRole)->size()"/>
                  <subModelOperations xsi:type="tool:If" conditionExpression="[source.oclIsTypeOf(BasicComponent)/]">
                    <subModelOperations xsi:type="tool:For" expression="[target.signatures__OperationInterface/]">
                      <subModelOperations xsi:type="tool:If" conditionExpression="[source.oclAsType(BasicComponent).serviceEffectSpecifications__BasicComponent->exists (x | x.oclAsType(ResourceDemandingSEFF).describedService__SEFF = i) = false/]">
                        <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                          <subModelOperations xsi:type="tool:CreateInstance" typeName="seff::ResourceDemandingSEFF" referenceName="serviceEffectSpecifications__BasicComponent">
                            <subModelOperations xsi:type="tool:SetValue" featureName="describedService__SEFF" valueExpression="var:i"/>
                            <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool:CreateInstance" typeName="seff.StartAction" referenceName="steps_Behaviour" variableName="StartAction"/>
                              <subModelOperations xsi:type="tool:CreateInstance" typeName="seff.StopAction" referenceName="steps_Behaviour" variableName="StopAction"/>
                              <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:StartAction">
                                <subModelOperations xsi:type="tool:SetValue" featureName="successor_AbstractAction" valueExpression="var:StopAction"/>
                              </subModelOperations>
                              <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:StopAction">
                                <subModelOperations xsi:type="tool:SetValue" featureName="predecessor_AbstractAction" valueExpression="var:StartAction"/>
                              </subModelOperations>
                              <subModelOperations xsi:type="tool:ExternalJavaAction" name="Activate Seff Viewpoint on creation" id="ActivateViewpoint">
                                <parameters name="element" value="var:instance"/>
                                <parameters name="Viewpoint" value="Seff"/>
                                <parameters name="Diagram Name" value="aql:'&lt;' + source.oclAsType(repository::BasicComponent).entityName + '>' + '&lt;' + i.oclAsType(repository::OperationSignature).entityName + '> SEFF Diagram'"/>
                                <parameters name="RepresentationDescription" value="Seff Diagram"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="InfrastructureRequiredRole" edgeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@edgeMappings[name='InfrastructureRequiredRole']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.InfrastructureRequiredRole" referenceName="requiredRoles_InterfaceRequiringEntity">
                  <subModelOperations xsi:type="tool:SetValue" featureName="requiredInterface__InfrastructureRequiredRole" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:self.requiringEntity_RequiredRole.entityName + '.' + self.requiredInterface__InfrastructureRequiredRole.entityName + '.InfrastructureRequiredRole' + source.eContents()->filter(repository::InfrastructureRequiredRole)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="InfrastructureProvidedRole" precondition="[preSource.oclAsType(RepositoryComponent).providedRoles_InterfaceProvidingEntity->exists(x |  (x.oclIsTypeOf(InfrastructureProvidedRole)) and (x.oclAsType(InfrastructureProvidedRole).providedInterface__InfrastructureProvidedRole = preTarget)) = false/]" edgeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@edgeMappings[name='InfrastructureProvidedRole']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository::InfrastructureProvidedRole" referenceName="providedRoles_InterfaceProvidingEntity">
                  <subModelOperations xsi:type="tool:SetValue" featureName="providedInterface__InfrastructureProvidedRole" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:self.providingEntity_ProvidedRole.entityName + '.' + self.providedInterface__InfrastructureProvidedRole.entityName + '.InfrastructureProvidedRole' + source.eContents()->filter(repository::InfrastructureProvidedRole)->size()"/>
                  <subModelOperations xsi:type="tool:For" expression="aql:target.infrastructureSignatures__InfrastructureInterface">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="seff::ResourceDemandingSEFF" referenceName="serviceEffectSpecifications__BasicComponent">
                        <subModelOperations xsi:type="tool:SetValue" featureName="describedService__SEFF" valueExpression="var:i"/>
                        <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="tool:If" conditionExpression="aql: instance.eContents(seff::StartAction)->size() = 0 and instance.eContents(seff::StopAction)->size() = 0"/>
                          <subModelOperations xsi:type="tool:CreateInstance" typeName="seff.StartAction" referenceName="steps_Behaviour" variableName="StartAction"/>
                          <subModelOperations xsi:type="tool:CreateInstance" typeName="seff.StopAction" referenceName="steps_Behaviour" variableName="StopAction"/>
                          <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:StartAction">
                            <subModelOperations xsi:type="tool:SetValue" featureName="successor_AbstractAction" valueExpression="var:StopAction"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:StopAction">
                            <subModelOperations xsi:type="tool:SetValue" featureName="predecessor_AbstractAction" valueExpression="var:StartAction"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="OperationInterface Deletion">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:For" expression="[self.eContainer().eAllContents()->selectByType(OperationProvidedRole)/]">
                  <subModelOperations xsi:type="tool:If" conditionExpression="[i.oclAsType(OperationProvidedRole).providedInterface__OperationProvidedRole = element/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:i">
                      <subModelOperations xsi:type="tool:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:For" expression="[self.eContainer().eAllContents()->selectByType(OperationRequiredRole)/]">
                  <subModelOperations xsi:type="tool:If" conditionExpression="[i.oclAsType(OperationRequiredRole).requiredInterface__OperationRequiredRole = element/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:i">
                      <subModelOperations xsi:type="tool:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="InfrastructureInterface Deletion">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:For" expression="[self.eContainer().eAllContents()->selectByType(InfrastructureProvidedRole)/]">
                  <subModelOperations xsi:type="tool:If" conditionExpression="[i.oclAsType(InfrastructureProvidedRole).providedInterface__InfrastructureProvidedRole = element/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:i">
                      <subModelOperations xsi:type="tool:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:For" expression="[self.eContainer().eAllContents()->selectByType(InfrastructureRequiredRole)/]">
                  <subModelOperations xsi:type="tool:If" conditionExpression="[i.oclAsType(InfrastructureRequiredRole).requiredInterface__InfrastructureRequiredRole = element/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:i">
                      <subModelOperations xsi:type="tool:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="OperationProvidedRole's Target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:If" conditionExpression="[element.providingEntity_ProvidedRole.providedRoles_InterfaceProvidingEntity->exists(x |  (x.oclIsTypeOf(OperationProvidedRole)) and (x.oclAsType(OperationProvidedRole).providedInterface__OperationProvidedRole = target)) = false or element.providingEntity_ProvidedRole.oclIsTypeOf(CompositeComponent)/]">
                  <subModelOperations xsi:type="tool:SetValue" featureName="providedInterface__OperationProvidedRole" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="OperationProvidedRole's Source" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:If" conditionExpression="[target.oclAsType(RepositoryComponent).providedRoles_InterfaceProvidingEntity->exists(x |  (x.oclIsTypeOf(OperationProvidedRole)) and (x.oclAsType(OperationProvidedRole).providedInterface__OperationProvidedRole = element.providedInterface__OperationProvidedRole)) = false or target.oclIsTypeOf(CompositeComponent)/]">
                  <subModelOperations xsi:type="tool:SetValue" featureName="providingEntity_ProvidedRole" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="InfrastructureProvidedRole's Target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:If" conditionExpression="[element.providingEntity_ProvidedRole.providedRoles_InterfaceProvidingEntity->exists(x |  (x.oclIsTypeOf(InfrastructureProvidedRole)) and (x.oclAsType(InfrastructureProvidedRole).providedInterface__InfrastructureProvidedRole = target)) = false or element.providingEntity_ProvidedRole.oclIsTypeOf(CompositeComponent)/]">
                  <subModelOperations xsi:type="tool:SetValue" featureName="providedInterface__InfrastructureProvidedRole" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="InfrastructureProvidedRole's Source" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:If" conditionExpression="[target.oclAsType(RepositoryComponent).providedRoles_InterfaceProvidingEntity->exists(x |  (x.oclIsTypeOf(InfrastructureProvidedRole)) and (x.oclAsType(InfrastructureProvidedRole).providedInterface__InfrastructureProvidedRole = element.providedInterface__InfrastructureProvidedRole)) = false or target.oclIsTypeOf(CompositeComponent)/]">
                  <subModelOperations xsi:type="tool:SetValue" featureName="providingEntity_ProvidedRole" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="OperationRequiredRole's Target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:SetValue" featureName="requiredInterface__OperationRequiredRole" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="RequiredRole's Source" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:SetValue" featureName="requiringEntity_RequiredRole" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="InfrastructureRequiredRole's Target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:SetValue" featureName="requiredInterface__InfrastructureRequiredRole" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="SourceRole's Target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:SetValue" featureName="eventGroup__SourceRole" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DoubleClickDescription" name="SubSystem Representation" mappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='SubSystem']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Open SubSystem Representation" id="OpenRepresentation">
                <parameters name="Viewpoint" value="Assembly"/>
                <parameters name="RepresentationDescription" value="Assembly Diagram"/>
                <parameters name="element" value="var:element"/>
                <parameters name="Diagram name" value="SubSystem Diagram"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DoubleClickDescription" name="CompositeComponent Representation" mappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='CompositeComponent']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Open CompositeComponent Representation" id="OpenRepresentation">
                <parameters name="Viewpoint" value="Assembly"/>
                <parameters name="RepresentationDescription" value="Assembly Diagram"/>
                <parameters name="element" value="var:element"/>
                <parameters name="Diagram name" value="CompositeComponent Diagram"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:PasteDescription" name="Repository Component Copy Paste" precondition="aql:copiedElement.oclIsKindOf(repository::RepositoryComponent)" forceRefresh="true">
            <container name="container"/>
            <containerView name="containerView"/>
            <copiedView name="copiedView"/>
            <copiedElement name="copiedElement"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:SetValue" featureName="components__Repository" valueExpression="aql:copiedElement.copyIdentifier()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:PasteDescription" name="Interface Copy Paste" precondition="aql:copiedElement.oclIsKindOf(repository::Interface)" forceRefresh="true">
            <container name="container"/>
            <containerView name="containerView"/>
            <copiedView name="copiedView"/>
            <copiedElement name="copiedElement"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:SetValue" featureName="interfaces__Repository" valueExpression="aql:copiedElement.copyIdentifier()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Internal Elements">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Signature" nodeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='Interface']/@subNodeMappings[name='OperationSignature'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='InfrastructureInterface']/@subNodeMappings[name='InfrastructureSignature']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.eClass()=repository::OperationInterface">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.OperationSignature" referenceName="signatures__OperationInterface">
                    <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'method' + container.eAllContents()->filter(repository::OperationSignature)->size()"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.eClass()=repository::InfrastructureInterface">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.InfrastructureSignature" referenceName="infrastructureSignatures__InfrastructureInterface">
                    <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'method' + container.eAllContents()->filter(repository::InfrastructureSignature)->size()"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Passive Resource" nodeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='PassiveResourcesCompartment']/@subNodeMappings[name='PassiveResource']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.PassiveResource" referenceName="passiveResource_BasicComponent" variableName="passiveResource">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:passiveResource">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="core.PCMRandomVariable" referenceName="capacity_PassiveResource"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'PassiveResource'+container.passiveResource_BasicComponent->size()"/>
                    <subModelOperations xsi:type="tool:ExternalJavaAction" name="Set Capacity" id="SetCapacity">
                      <parameters name="element" value="var:passiveResource"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="ComponentParameter" containerMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='ComponentParameterCompartment']/@subContainerMappings[name='ComponentParameter']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="parameter.VariableUsage" referenceName="componentParameterUsage_ImplementationComponentType" variableName="variableUsage">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:variableUsage">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="stoex::VariableReference" referenceName="namedReference__VariableUsage" variableName="variableReference"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="namedReference__VariableUsage" valueExpression="var:variableReference"/>
                    <subModelOperations xsi:type="tool:ExternalJavaAction" name="Set NamedReference" id="SetNamedReference">
                      <parameters name="VariableReference" value="var:variableReference"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="VariableCharacterisation" nodeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='ComponentParameterCompartment']/@subContainerMappings[name='ComponentParameter']/@subNodeMappings[name='Variable%20Characterisation']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="parameter.VariableCharacterisation" referenceName="variableCharacterisation_VariableUsage" variableName="variableCharacterisation">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:variableCharacterisation">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="core.PCMRandomVariable" referenceName="specification_VariableCharacterisation"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:parameter::VariableCharacterisationType::STRUCTURE"/>
                    <subModelOperations xsi:type="tool:ExternalJavaAction" name="Set Variable Characterisation Specification" id="SetVariableCharacterisationSpecification">
                      <parameters name="element" value="var:variableCharacterisation"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="SEFF" nodeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='SEFFCompartment']/@subNodeMappings[name='SEFF']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="seff::ResourceDemandingSEFF" referenceName="serviceEffectSpecifications__BasicComponent">
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Add SEFF" id="AddSEFF">
                    <parameters name="instance" value="var:instance"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.describedService__SEFF = null">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.describedService__SEFF &lt;> null">
                    <subModelOperations xsi:type="tool:ExternalJavaAction" name="Activate Seff Viewpoint on creation" id="ActivateViewpoint">
                      <parameters name="element" value="var:instance"/>
                      <parameters name="Viewpoint" value="Seff"/>
                      <parameters name="Diagram Name" value="aql:'&lt;' + container.oclAsType(repository::BasicComponent).entityName + '>' + '&lt;' + self.describedService__SEFF.entityName + '> SEFF Diagram'"/>
                      <parameters name="RepresentationDescription" value="Seff Diagram"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instance">
                      <subModelOperations xsi:type="tool:If" conditionExpression="aql:instance.eContents(seff::StartAction)->size() = 0 and instance.eContents(seff::StopAction)->size() = 0"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="seff.StartAction" referenceName="steps_Behaviour" variableName="StartAction"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="seff.StopAction" referenceName="steps_Behaviour" variableName="StopAction"/>
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:StartAction">
                        <subModelOperations xsi:type="tool:SetValue" featureName="successor_AbstractAction" valueExpression="var:StopAction"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:StopAction">
                        <subModelOperations xsi:type="tool:SetValue" featureName="predecessor_AbstractAction" valueExpression="var:StartAction"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ResourceRequiredRole" nodeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='ResourceRequiredRolesCompartment']/@subNodeMappings[name='ResourceRequiredRole']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="entity.ResourceRequiredRole" referenceName="resourceRequiredRoles__ResourceInterfaceRequiringEntity">
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Set ResourceInterface" id="SetResourceInterface">
                    <parameters name="instance" value="var:instance"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'ResourceRequiredRole'+container.resourceRequiredRoles__ResourceInterfaceRequiringEntity->size()"/>
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.requiredResourceInterface__ResourceRequiredRole = null">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="Variable Usage" inputLabelExpression="aql:self.namedReference__VariableUsage.referenceName">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:If" conditionExpression="[self.namedReference__VariableUsage = null/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="parameter::VariableReference" referenceName="namedReference__VariableUsage" variableName="VariableReference"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.namedReference__VariableUsage">
                  <subModelOperations xsi:type="tool:SetValue" featureName="referenceName" valueExpression="var:0"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DoubleClickDescription" name="Edit VariableCharacterisation" mappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='ComponentParameterCompartment']/@subContainerMappings[name='ComponentParameter']/@subNodeMappings[name='Variable%20Characterisation']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:If" conditionExpression="[self.oclAsType(VariableCharacterisation).specification_VariableCharacterisation = null/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="core.PCMRandomVariable" referenceName="specification_VariableCharacterisation"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Edit Variable Characterisation Specification" id="SetVariableCharacterisationSpecification">
                  <parameters name="element" value="var:element"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DoubleClickDescription" name="Edit Capacity" mappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='PassiveResourcesCompartment']/@subNodeMappings[name='PassiveResource']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:If" conditionExpression="[self.oclAsType(PassiveResource).capacity_PassiveResource = null/]">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="core.PCMRandomVariable" referenceName="capacity_PassiveResource"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Edit capacity" id="SetCapacity">
                  <parameters name="element" value="var:element"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DoubleClickDescription" name="SEFF Representation" mappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='SEFFCompartment']/@subNodeMappings[name='SEFF']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Open SEFF Representation" id="OpenRepresentation">
                <parameters name="Viewpoint" value="Seff"/>
                <parameters name="RepresentationDescription" value="Seff Diagram"/>
                <parameters name="element" value="var:element"/>
                <parameters name="Diagram name" value="test"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DoubleClickDescription" name="Edit ResourceInterface" mappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent']/@subContainerMappings[name='ResourceRequiredRolesCompartment']/@subNodeMappings[name='ResourceRequiredRole']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:ExternalJavaAction" name="Edit ResourceInterface" id="SetResourceInterface">
                  <parameters name="instance" value="var:element"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:PasteDescription" name="SEFF Copy Paste" precondition="aql:copiedElement.oclIsTypeOf(seff::ResourceDemandingSEFF)" forceRefresh="true">
            <container name="container"/>
            <containerView name="containerView"/>
            <copiedView name="copiedView"/>
            <copiedElement name="copiedElement"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:SetValue" featureName="serviceEffectSpecifications__BasicComponent" valueExpression="aql:copiedElement.copyIdentifier()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="Component Types" activeByDefault="true">
        <edgeMappings name="Conforms Provides Type" deletionDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@toolSections.0/@ownedTools[name='Delete%20Conforms%20Provides%20Relation']" sourceMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='CompleteComponentType']" targetMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='ProvidesComponentType']" targetFinderExpression="feature:parentProvidesComponentTypes" reconnections="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@toolSections.0/@ownedTools[name='Conforms%20Provides%20Relation%20-%20Target'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@toolSections.0/@ownedTools[name='Conforms%20Provides%20Relation%20-%20Source']">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="&lt;&lt;Conforms>>">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="Conforms Complete Type" deletionDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@toolSections.0/@ownedTools[name='Delete%20Conforms%20Complete%20Relation']" sourceMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='CompositeComponent']" targetMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='CompleteComponentType']" targetFinderExpression="feature:parentCompleteComponentTypes" reconnections="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@toolSections.0/@ownedTools[name='Conforms%20Complete%20Relation%20-%20Target'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@toolSections.0/@ownedTools[name='Conforms%20Complete%20Relation%20-%20Source']">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="&lt;&lt;Conforms>>">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="ProvidesComponentType" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="feature:components__Repository" domainClass="repository.ProvidesComponentType">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="aql: '&lt;&lt;ProvidesComponent>>\n'.concat(self.entityName)" widthComputationExpression="20" heightComputationExpression="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="CompleteComponentType" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="feature:components__Repository" domainClass="repository.CompleteComponentType">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="aql: '&lt;&lt;CompleteComponent>>\n'.concat(self.entityName)" widthComputationExpression="20" heightComputationExpression="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Componenent Types">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="ProvidesComponentType" containerMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='ProvidesComponentType']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository::ProvidesComponentType" referenceName="components__Repository">
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'ProvidesComponentType' + container.eAllContents()->filter(repository::ProvidesComponentType)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="CompleteComponentType" containerMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='CompleteComponentType']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository::CompleteComponentType" referenceName="components__Repository">
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'CompleteComponentType' + container.eAllContents()->filter(repository::CompleteComponentType)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Conforms Provided Type" edgeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@edgeMappings[name='Conforms%20Provides%20Type']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:SetValue" featureName="parentProvidesComponentTypes" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Conforms Complete Type" edgeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@edgeMappings[name='Conforms%20Complete%20Type']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:SetValue" featureName="parentCompleteComponentTypes" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete Conforms Complete Relation">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:Unset" featureName="parentCompleteComponentTypes" elementExpression="[elementView.targetNode.oclAsType(DDiagramElement).target/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete Conforms Provides Relation">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:Unset" featureName="parentProvidesComponentTypes" elementExpression="[elementView.targetNode.oclAsType(DDiagramElement).target/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="Conforms Provides Relation - Target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:Unset" featureName="parentProvidesComponentTypes" elementExpression="[edgeView.targetNode.oclAsType(DDiagramElement).target/]"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="parentProvidesComponentTypes" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="Conforms Provides Relation - Source" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="ReconnectSourceOfConformsProvidesRelation" id="ReconnectSourceOfConformsProvidesRelation">
                <parameters name="source" value="var:source"/>
                <parameters name="target" value="var:target"/>
                <parameters name="otherEnd" value="var:otherEnd"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="Conforms Complete Relation - Target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:Unset" featureName="parentCompleteComponentTypes" elementExpression="[edgeView.targetNode.oclAsType(DDiagramElement).target/]"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="parentCompleteComponentTypes" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="Conforms Complete Relation - Source" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="ReconnectSourceOfConformsCompleteRelation" id="ReconnectSourceOfConformsCompleteRelation">
                <parameters name="source" value="var:source"/>
                <parameters name="target" value="var:target"/>
                <parameters name="otherEnd" value="var:otherEnd"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="Event-Based Communication" activeByDefault="true">
        <edgeMappings name="SourceRole" sourceMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='CompositeComponent'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='SubSystem'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='ProvidesComponentType'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='CompleteComponentType']" targetMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Event-Based%20Communication']/@containerMappings[name='EventGroup']" targetFinderExpression="feature:eventGroup__SourceRole" sourceFinderExpression="feature:requiringEntity_RequiredRole" domainClass="repository.SourceRole" useDomainElement="true" reconnections="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='RequiredRole%27s%20Source'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='SourceRole%27s%20Target']">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql: '&lt;&lt;Emits>>\n' + self.entityName">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="SinkRole" sourceMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='BasicComponent'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='CompositeComponent'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@containerMappings[name='SubSystem'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='ProvidesComponentType'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Component%20Types']/@containerMappings[name='CompleteComponentType']" targetMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Event-Based%20Communication']/@containerMappings[name='EventGroup']" targetFinderExpression="feature:eventGroup__SinkRole" sourceFinderExpression="feature:providingEntity_ProvidedRole" domainClass="repository.SinkRole" useDomainElement="true" reconnections="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Event-Based%20Communication']/@toolSections.0/@ownedTools[name='SinkRole%27s%20Target'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Event-Based%20Communication']/@toolSections.0/@ownedTools[name='SinkRole%27s%20Source']">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql: '&lt;&lt;Handles>>\n' + self.entityName">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="EventGroup" deletionDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Event-Based%20Communication']/@toolSections.0/@ownedTools[name='EventGroup%20Deletion']" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="feature:interfaces__Repository" domainClass="repository.EventGroup" childrenPresentation="List">
          <subNodeMappings name="EventType" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Signature']" semanticCandidatesExpression="feature:eventTypes__EventGroup" domainClass="repository.EventType">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.entityName + '(' + self.parameter__EventType.dataType__Parameter.getDataTypeName() + ' ' + self.parameter__EventType.parameterName + ')'" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="aql: '&lt;&lt;EventGroup>>\n'.concat(self.entityName)" widthComputationExpression="20" heightComputationExpression="10">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Event-Based Communication">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Event Group" containerMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Event-Based%20Communication']/@containerMappings[name='EventGroup']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.EventGroup" referenceName="interfaces__Repository">
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'EventGroup' + container.eAllContents()->filter(repository::EventGroup)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="EventType" nodeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Event-Based%20Communication']/@containerMappings[name='EventGroup']/@subNodeMappings[name='EventType']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.EventType" referenceName="eventTypes__EventGroup">
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'eventType'+container.eventTypes__EventGroup->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="SourceRole" edgeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Event-Based%20Communication']/@edgeMappings[name='SourceRole']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.SourceRole" referenceName="requiredRoles_InterfaceRequiringEntity">
                  <subModelOperations xsi:type="tool:SetValue" featureName="eventGroup__SourceRole" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:self.requiringEntity_RequiredRole.entityName + '.' + self.eventGroup__SourceRole.entityName + '.SourceRole' + source.eContents()->filter(repository::SourceRole)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="SinkRole" precondition="[preSource.oclAsType(RepositoryComponent).providedRoles_InterfaceProvidingEntity->exists(x |  (x.oclIsTypeOf(SinkRole)) and (x.oclAsType(SinkRole).eventGroup__SinkRole = preTarget)) = false/]" edgeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='Event-Based%20Communication']/@edgeMappings[name='SinkRole']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.SinkRole" referenceName="providedRoles_InterfaceProvidingEntity">
                  <subModelOperations xsi:type="tool:SetValue" featureName="eventGroup__SinkRole" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:self.providingEntity_ProvidedRole.entityName + '.' + self.eventGroup__SinkRole.entityName + '.SinkRole' + source.eContents()->filter(repository::SinkRole)->size()"/>
                  <subModelOperations xsi:type="tool:For" expression="aql: target.eventTypes__EventGroup">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="seff::ResourceDemandingSEFF" referenceName="serviceEffectSpecifications__BasicComponent">
                        <subModelOperations xsi:type="tool:SetValue" featureName="describedService__SEFF" valueExpression="var:i"/>
                        <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instance">
                          <subModelOperations xsi:type="tool:If" conditionExpression="aql:instance.eContents(seff::StartAction)->size() = 0 and instance.eContents(seff::StopAction)->size() = 0"/>
                          <subModelOperations xsi:type="tool:CreateInstance" typeName="seff.StartAction" referenceName="steps_Behaviour" variableName="StartAction"/>
                          <subModelOperations xsi:type="tool:CreateInstance" typeName="seff.StopAction" referenceName="steps_Behaviour" variableName="StopAction"/>
                          <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:StartAction">
                            <subModelOperations xsi:type="tool:SetValue" featureName="successor_AbstractAction" valueExpression="var:StopAction"/>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:StopAction">
                            <subModelOperations xsi:type="tool:SetValue" featureName="predecessor_AbstractAction" valueExpression="var:StartAction"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="EventGroup Deletion">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:For" expression="[self.eContainer().eAllContents()->selectByType(SourceRole)/]">
                  <subModelOperations xsi:type="tool:If" conditionExpression="[i.oclAsType(SourceRole).eventGroup__SourceRole = element/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:i">
                      <subModelOperations xsi:type="tool:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:For" expression="[self.eContainer().eAllContents()->selectByType(SinkRole)/]">
                  <subModelOperations xsi:type="tool:If" conditionExpression="[i.oclAsType(SinkRole).eventGroup__SinkRole = element/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:i">
                      <subModelOperations xsi:type="tool:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="SinkRole's Target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:If" conditionExpression="[element.providingEntity_ProvidedRole.providedRoles_InterfaceProvidingEntity->exists(x |  (x.oclIsTypeOf(SinkRole)) and (x.oclAsType(SinkRole).eventGroup__SinkRole = target)) = false or element.providingEntity_ProvidedRole.oclIsTypeOf(CompositeComponent)/]">
                  <subModelOperations xsi:type="tool:SetValue" featureName="eventGroup__SinkRole" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="SinkRole's Source" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:If" conditionExpression="[target.oclAsType(RepositoryComponent).providedRoles_InterfaceProvidingEntity->exists(x |  (x.oclIsTypeOf(SinkRole)) and (x.oclAsType(SinkRole).eventGroup__SinkRole = element.eventGroup__SinkRole)) = false or target.oclIsTypeOf(CompositeComponent)/]">
                  <subModelOperations xsi:type="tool:SetValue" featureName="providingEntity_ProvidedRole" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="DataTypes" activeByDefault="true">
        <edgeMappings name="Contains" deletionDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@toolSections.0/@ownedTools[name='Delete%20Contains']" sourceMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@containerMappings[name='CompositeDataType']" targetMapping="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@containerMappings[name='CollectionDataType'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@containerMappings[name='CompositeDataType']" targetFinderExpression="aql:self.innerDeclaration_CompositeDataType.datatype_InnerDeclaration" reconnections="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@toolSections.0/@ownedTools[name='Contains%20-%20Target'] //@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@toolSections.0/@ownedTools[name='Contains%20-%20Source']">
          <style>
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="&lt;&lt;Contains>>">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="CollectionDataType" deletionDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@toolSections.0/@ownedTools[name='Delete%20CollectionDataType']" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="feature:dataTypes__Repository" domainClass="repository.CollectionDataType" childrenPresentation="List">
          <subNodeMappings name="InnerType" deletionDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@toolSections.0/@ownedTools[name='Delete%20Inner%20Type']" semanticCandidatesExpression="feature:innerType_CollectionDataType" doubleClickDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@toolSections.0/@ownedTools[name='Edit%20InnerType']" domainClass="repository.DataType">
            <style xsi:type="style:BundledImageDescription" labelExpression="" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
            <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(repository::PrimitiveDataType)">
              <style xsi:type="style:SquareDescription" labelExpression="aql:self.oclAsType(repository::PrimitiveDataType).type.toString()" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(repository::PrimitiveDataType)==false">
              <style xsi:type="style:SquareDescription" labelExpression="[self.oclAsType(entity::Entity).entityName/]" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="aql: '&lt;&lt;CollectionDataType>>\n'.concat(self.entityName)" widthComputationExpression="10" heightComputationExpression="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="CompositeDataType" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="feature:dataTypes__Repository" domainClass="repository.CompositeDataType" childrenPresentation="List">
          <subNodeMappings name="InnerDeclaration" labelDirectEdit="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Name']" semanticCandidatesExpression="feature:innerDeclaration_CompositeDataType" doubleClickDescription="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@toolSections.0/@ownedTools[name='Edit%20InnerDeclaration']" domainClass="repository.InnerDeclaration">
            <style xsi:type="style:BundledImageDescription" showIcon="false" labelExpression="" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
            <conditionnalStyles predicateExpression="[self.datatype_InnerDeclaration.oclIsTypeOf(PrimitiveDataType)/]">
              <style xsi:type="style:SquareDescription" labelExpression="[self.entityName + ' : ' + self.datatype_InnerDeclaration.oclAsType(repository::PrimitiveDataType).type.toString() /]" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="[self.datatype_InnerDeclaration.oclIsTypeOf(CompositeDataType)/]">
              <style xsi:type="style:SquareDescription" labelExpression="[self.entityName + ' : ' + self.datatype_InnerDeclaration.oclAsType(repository::CompositeDataType).entityName /]" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="[self.datatype_InnerDeclaration.oclIsTypeOf(CollectionDataType)/]">
              <style xsi:type="style:SquareDescription" labelExpression="[self.entityName + ' : ' + self.datatype_InnerDeclaration.oclAsType(repository::CollectionDataType).entityName /]" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="aql: '&lt;&lt;CompositeDataType>>\n'.concat(self.entityName)" widthComputationExpression="10" heightComputationExpression="5">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="DataTypes">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="CollectionDataType" containerMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@containerMappings[name='CollectionDataType']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.CollectionDataType" referenceName="dataTypes__Repository">
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'CollectionDataType' + container.eAllContents()->filter(repository::CollectionDataType)->size()"/>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Set InnerType" id="SetInnerType">
                    <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.innerType_CollectionDataType = null">
                      <subModelOperations xsi:type="tool:RemoveElement"/>
                    </subModelOperations>
                    <parameters name="collection" value="var:instance"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="CompositeDataType" containerMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@containerMappings[name='CompositeDataType']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.CompositeDataType" referenceName="dataTypes__Repository">
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'CompositeDataType' + container.eAllContents()->filter(repository::CompositeDataType)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="InnerDeclaration" nodeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@containerMappings[name='CompositeDataType']/@subNodeMappings[name='InnerDeclaration']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.InnerDeclaration" referenceName="innerDeclaration_CompositeDataType">
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'InnerDeclaration' + container.eAllContents()->filter(repository::InnerDeclaration)->size()"/>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="Set InnerDeclaration" id="SetInnerDeclaration">
                    <parameters name="innerDeclaration" value="var:instance"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Contains" edgeMappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@edgeMappings[name='Contains']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.InnerDeclaration" referenceName="innerDeclaration_CompositeDataType">
                  <subModelOperations xsi:type="tool:SetValue" featureName="datatype_InnerDeclaration" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'InnerDeclaration' + self.compositeDataType_InnerDeclaration.innerDeclaration_CompositeDataType->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete Contains">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:For" expression="feature:innerDeclaration_CompositeDataType">
                  <subModelOperations xsi:type="tool:If" conditionExpression="[self.datatype_InnerDeclaration = elementView.targetNode.oclAsType(DDiagramElement).target/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:i">
                      <subModelOperations xsi:type="tool:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete Inner Type">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:containerView.target">
                <subModelOperations xsi:type="tool:Unset" featureName="innerType_CollectionDataType"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="Delete CollectionDataType">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:Unset" featureName="innerType_CollectionDataType"/>
                <subModelOperations xsi:type="tool:For" expression="[self.eContainer().eAllContents()->selectByType(CompositeDataType)/]">
                  <subModelOperations xsi:type="tool:For" expression="[i.oclAsType(CompositeDataType).innerDeclaration_CompositeDataType/]" iteratorName="j">
                    <subModelOperations xsi:type="tool:If" conditionExpression="[j.oclAsType(InnerDeclaration).datatype_InnerDeclaration = element/]">
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:j">
                        <subModelOperations xsi:type="tool:RemoveElement"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DoubleClickDescription" name="Edit InnerDeclaration" mappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@containerMappings[name='CompositeDataType']/@subNodeMappings[name='InnerDeclaration']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Edit InnerDeclaration" id="SetInnerDeclaration">
                <parameters name="innerDeclaration" value="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DoubleClickDescription" name="Edit InnerType" mappings="//@ownedViewpoints[name='Repository']/@ownedRepresentations[name='Repository%20Diagram']/@additionalLayers[name='DataTypes']/@containerMappings[name='CollectionDataType']/@subNodeMappings[name='InnerType']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Edit InnerType" id="SetInnerType">
                <parameters name="collection" value="[elementView.oclAsType(DNodeListElement).eContainer().oclAsType(DNodeList).target/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="Contains - Target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:For" expression="feature:innerDeclaration_CompositeDataType">
                  <subModelOperations xsi:type="tool:If" conditionExpression="[self.datatype_InnerDeclaration = edgeView.targetNode.oclAsType(DDiagramElement).target/]">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:i">
                      <subModelOperations xsi:type="tool:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.InnerDeclaration" referenceName="innerDeclaration_CompositeDataType">
                  <subModelOperations xsi:type="tool:SetValue" featureName="datatype_InnerDeclaration" valueExpression="var:target"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'InnerDeclaration' + self.compositeDataType_InnerDeclaration.innerDeclaration_CompositeDataType->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="Contains - Source" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="repository.InnerDeclaration" referenceName="innerDeclaration_CompositeDataType">
                  <subModelOperations xsi:type="tool:SetValue" featureName="entityName" valueExpression="aql:'InnerDeclaration' + self.compositeDataType_InnerDeclaration.innerDeclaration_CompositeDataType->size()"/>
                  <subModelOperations xsi:type="tool:ExternalJavaAction" name="ReconnectSourceOfContainsRelation" id="ReconnectSourceOfContainsRelation">
                    <parameters name="source" value="var:source"/>
                    <parameters name="target" value="var:target"/>
                    <parameters name="otherEnd" value="var:otherEnd"/>
                    <parameters name="instance" value="var:instance"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.palladiosimulator.editors.sirius.repository.Services"/>
    <ownedJavaExtensions qualifiedClassName="org.palladiosimulator.editors.sirius.services.PCMServices"/>
  </ownedViewpoints>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Properties">
    <metamodels href="http://palladiosimulator.org/PalladioComponentModel/5.2#//parameter"/>
    <metamodels href="http://palladiosimulator.org/PalladioComponentModel/5.2#//repository"/>
    <categories name="Default">
      <pages name="OperationInterface" labelExpression="Operations" domainClass="repository::OperationInterface" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0"/>
      <pages name="InfrastructureInterface" labelExpression="Operations" domainClass="repository::InfrastructureInterface" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.1"/>
      <pages name="EventGroup" labelExpression="Operations" domainClass="repository::EventGroup" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.2"/>
      <groups name="OperationInterface group" domainClass="repository::OperationInterface" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:CustomDescription" name="org.palladiosimulator.editors.sirius.repository.custom.properties.OperationInterface">
          <customExpressions name="valueExpression" customExpression="aql:self"/>
        </controls>
        <style barStyle="NO_TITLE" toggleStyle="NONE"/>
      </groups>
      <groups name="InfrastructureInterface group" domainClass="repository::InfrastructureInterface" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:CustomDescription" name="org.palladiosimulator.editors.sirius.repository.custom.properties.InfrastructureInterface">
          <customExpressions name="valueExpression" customExpression="aql:self"/>
        </controls>
        <style barStyle="NO_TITLE" toggleStyle="NONE"/>
      </groups>
      <groups name="EventGroup group" domainClass="repository::EventGroup" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:CustomDescription" name="org.palladiosimulator.editors.sirius.repository.custom.properties.EventGroup">
          <customExpressions name="valueExpression" customExpression="aql:self"/>
        </controls>
        <style barStyle="NO_TITLE" toggleStyle="NONE"/>
      </groups>
    </categories>
  </extensions>
</description:Group>
